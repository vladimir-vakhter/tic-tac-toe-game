{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","squaresFilled","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4OAKA,SAASA,EAAOC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAMTC,E,kDACJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,cAAe,EACfC,SAAS,GALM,E,+CASnB,SAAYC,GACV,IAAML,EAAUM,KAAKP,MAAMC,QAAQO,QACnC,IAAIC,EAAgBR,KAAYA,EAAQK,GAAxC,CAGA,IAAMF,EAAgBG,KAAKP,MAAMI,cAAgB,EACjDH,EAAQK,GAAKC,KAAKP,MAAMK,QAAU,IAAM,IACxCE,KAAKG,SAAS,CACZT,QAASA,EACTG,cAAeA,EACfC,SAAUE,KAAKP,MAAMK,a,0BAIzB,SAAaC,GAAI,IAAD,OACd,OACE,cAACZ,EAAD,CACEI,MAAQS,KAAKP,MAAMC,QAAQK,GAC3BT,QAAS,WAAO,EAAKc,YAAYL,Q,oBAKvC,WACE,IACIM,EADEC,EAASJ,EAAgBF,KAAKP,MAAMC,SAY1C,OATEW,EADCC,EACQ,WAAaA,EAEW,IAA7BN,KAAKP,MAAMI,cACJ,QAEA,iBAAmBG,KAAKP,MAAMK,QAAU,IAAM,KAKzD,gCACE,iDACA,qBAAKT,UAAU,SAAf,SAAyBgB,IACzB,sBAAKhB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKlB,UAAU,YAAf,UACGW,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GA/DTC,IAAMC,WAuEpBC,E,4JACJ,WACE,OACE,sBAAKrB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSmB,IAAMC,WAwBzB,SAASP,EAAgBR,GAWvB,IAVA,IAAMiB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIrB,EAAQmB,IAAMnB,EAAQmB,KAAOnB,EAAQoB,IAAMpB,EAAQmB,KAAOnB,EAAQqB,GACpE,OAAOrB,EAAQmB,GAGnB,OAAO,KAvBTG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.633c7fbc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// renders a simple button \nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\n\n// renders 9 squares\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      squaresFilled: 0,\n      xIsNext: true,\n    }\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const squaresFilled = this.state.squaresFilled + 1;\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      squaresFilled: squaresFilled,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n  \n  renderSquare(i) {\n    return (\n      <Square\n        value={ this.state.squares[i] } \n        onClick={() => {this.handleClick(i)}}\n      />\n    );\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if(winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      if (this.state.squaresFilled === 9) {\n        status = 'Draw!';\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n    }\n\n    return (\n      <div>\n        <h>Tic-Tac-Toe Game</h>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\n// renders a board with placeholder values\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n// a helper function calculating the winner of the game\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}